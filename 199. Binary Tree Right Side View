Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

For example:
Given the following binary tree,
   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---
You should return [1, 3, 4].

Credits:

考察树的层次遍历
class Solution {
public:
	vector<int> rightSideView(TreeNode* root) {
		vector<int> ans;
		if (root == 0) return ans;
		queue<TreeNode*> t1, t2;
		t1.push(root);
		while (!t1.empty()) {
			while (!t1.empty()) {
				TreeNode * tmp = t1.front(); t1.pop();
				if (t1.size() == 0) ans.push_back(tmp->val);
				if (tmp->left) t2.push(tmp->left);
				if (tmp->right) t2.push(tmp->right);
			}
			t1 = t2;
			while (!t2.empty()) t2.pop();
		}
		return ans;
	}
};
