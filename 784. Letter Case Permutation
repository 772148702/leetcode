利用深度搜索来完成。
class Solution {
public:
    
    void f(string& s,int lo,vector<string>& v) {
        if(lo==s.size()) {
            v.push_back(s);
            return;
        }
        f(s,lo+1,v);
        if(isalpha(s[lo])) {
            if(s[lo]>='a'&&s[lo]<='z') {
                s[lo] +='A'-'a';
                f(s,lo+1,v);
                s[lo] +='a'-'A';
            } else {
                s[lo] +='a'-'A';
                f(s,lo+1,v);
                s[lo] +='A'-'a';
            }
        }
    }
    
    vector<string> letterCasePermutation(string S) {
        vector<string> v;
        f(S,0,v);
        return v;
    }
};


//^(1<<5)能够实现大小转换。'a'-"A" =32 通过这个异或符号能够完成大小写字母的转换。
class Solution {
    void backtrack(string &s, int i, vector<string> &res) {
        if (i == s.size()) {
            res.push_back(s);
            return;
        }
        backtrack(s, i + 1, res);
        if (isalpha(s[i])) {
            // toggle case
            s[i] ^= (1 << 5);
            backtrack(s, i + 1, res);
            // return previous case
            s[i] ^= (1 << 5);
        }
    }
public:
    vector<string> letterCasePermutation(string S) {
        vector<string> res;
        backtrack(S, 0, res);
        return res;
    }
};
